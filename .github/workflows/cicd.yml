  name: CI/CD Monorepo FastAPI Services

  on:
    push:
      paths:
        - 'service_a/**'
        - 'service_b/**'

  jobs:
    detect-service:
      runs-on: ubuntu-latest
      outputs:
        changed_service: ${{ steps.detect.outputs.changed_service }}

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Detect changed service
          id: detect
          run: |
            echo "Checking changed files..."
            git fetch origin main
            BASE=$(git merge-base HEAD origin/main)
            CHANGED=$(git diff --name-only $BASE HEAD)
            echo "Changed files: $CHANGED"

            SERVICE=""
            if echo "$CHANGED" | grep -q "^service_a/"; then
              SERVICE="service_a"
            elif echo "$CHANGED" | grep -q "^service_b/"; then
              SERVICE="service_b"
            fi

            if [ -z "$SERVICE" ]; then
              echo "No relevant changes detected. Exiting..."
              echo "changed_service=none" >> $GITHUB_OUTPUT
              exit 0
            fi

            echo "Changed service: $SERVICE"
            echo "changed_service=$SERVICE" >> $GITHUB_OUTPUT

    build-and-deploy:
      needs: detect-service
      if: needs.detect-service.outputs.changed_service != 'none'
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to Docker Hub (mock)
          run: echo "Skipping login (mock only)"  # Add real login if needed

        - name: Build Docker image
          run: |
            SERVICE=${{ needs.detect-service.outputs.changed_service }}
            echo "Building service: $SERVICE"
            docker build -t $SERVICE:latest ./$SERVICE

        - name: Push Docker image (mock)
          run: echo "Skipping push to registry (mock only)"

        - name: Deploy to Azure Container Apps (mock)
          run: |
            SERVICE=${{ needs.detect-service.outputs.changed_service }}
            echo "Deploying $SERVICE to Azure (mock)"
