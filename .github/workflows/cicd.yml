name: CI/CD Monorepo FastAPI Services

on:
  push:
    paths:
      - 'service_*/**'

jobs:
  detect-services:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect changed services
        id: set-matrix
        run: |
          echo "Fetching changes..."
          git fetch origin main
          BASE=$(git merge-base HEAD origin/main)
          CHANGED=$(git diff --name-only $BASE HEAD)
          echo "Changed files: $CHANGED"

          SERVICES=$(echo "$CHANGED" | grep -oE "^service_[^/]+" | sort -u | uniq)
          
          if [ -z "$SERVICES" ]; then
            echo "No relevant services changed."
            echo "matrix=[]" >> $GITHUB_OUTPUT
            exit 0
          fi

          MATRIX_JSON=$(printf '%s\n' $SERVICES | jq -R . | jq -s '{"service": .}')
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT
          echo "Detected matrix: $MATRIX_JSON"

  build-and-deploy:
    needs: detect-services
    if: needs.detect-services.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.detect-services.outputs.matrix)}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub (mock)
        run: echo "Skipping login (mock)"

      - name: Build Docker image
        run: |
          echo "Building: ${{ matrix.service }}"
          docker build -t ${{ matrix.service }}:latest ./${{ matrix.service }}

      - name: Push Docker image (mock)
        run: echo "Skipping push (mock)"

      - name: Deploy to Azure Container Apps (mock)
        run: echo "Deploying ${{ matrix.service }} (mock)"
